
    $AdditionalInformation = [System.Collections.ArrayList]@($(Get-Process |  Select-Object -property ID, Path))


    foreach ($proc in $ProcessList)
    {
        $ind = 0
        $match = -1
        foreach ($addInfo in $AdditionalInformation)
        {
            if ($proc.ProcessId -eq $addInfo.ID)
            {
                $proc | Add-Member -MemberType NoteProperty -Name "FilePath" -Value $addInfo.Path
                $proc | Add-Member -MemberType NoteProperty -Name "FileVersion" -Value $addInfo.FileVersion

                $match = $ind
                break;
            }
            $ind++
        }

        if ($match -ne -1)
        {
            $AdditionalInformation.RemoveAt($match)
        }
    }

    function Start-Collection_Local
{
    Write-Log "Starting Local Collection on $Script:HostNames"
    
    #Loop through each module and log/run it
    for ($i = 0; $i -lt $($Script:ModulesList.Length); $i++)
    {
        $module = $($Script:ModulesList[$i])
        Write-Log "Running : $($i+1) / $($Script:ModulesList.Length) : $module"
        $results = $(&$module)
        Write-Log "Results: $results"
    }  

    Write-Log "Finished Local Collection on $Script:HostNames" 
}

function Start-Collection_Remote
{
    #Loop through each host
    foreach ($HostN in $Script:HostNames)
    {
        #Run each module
        foreach ($Module in $Script:ModulesList)
        {
            Invoke-Command -ScriptBlock "Start-Collection_$a" -ComputerName $Script:HostNames -ThrottleLimit 3
        }
    }
}